;
; Assembly Test 0 - strv instruction
; Success
;


; addi 1 a $e1
    addi $e1, $e1, 1 ; $e1 = 0 + 1 = 1

; addi 2 a $e2
    addi $e2, $e2, 2 ; $e2 = 0 + 2 = 2

; addi 3 a $e3
    addi $e3, $e3, 3 ; $e3 = 0 + 3 = 3

; addi 4 a $e4
    addi $e4, $e4, 4 ; $e4 = 0 + 4 = 4

; addi 5 a $e5
    addi $e5, $e5, 16 ; $e5 = 0 + 16 = 16

; addi 6 a $e6
    addi $e6, $e6, 32 ; $e6 = 0 + 32 = 32



; str del registro $e0 de la posicion de memoria en $e0 + 4 
    strv $v2, 16($zero) ; Guarda el valor de $v2 en la posicion 0x00016



; addi 1 a $e1
    subi $e1, $e1, 1 ; $e1 = 1 - 1 = 0

; addi 2 a $e2
    subi $e2, $e2, 1 ; $e2 = 2 - 1 = 1

; addi 3 a $e3
    subi $e3, $e3, 1 ; $e3 = 3 - 1 = 2

; addi 4 a $e4
    subi $e4, $e4, 1 ; $e4 = 4 - 1 = 3

; addi 5 a $e5
    muli $e5, $e5, 1 ; $e5 = 16 * 1 = 16

; addi 6 a $e6
    muli $e6, $e6, 1 ; $e6 = 32 * 1 = 32


; ldrv al registro $v0 de la posicion de memoria en $e0 + 16
    ldrv $v0, 0($zero) ; $v0 = M{R[$zero]}   ; iut


; ldrv al registro $v1 de la posicion de memoria en $e1 + 16
    ldr $v1, 0($e6) ; $v1 = M{R[$e1] + 16}   ; iut



;
; Bitstream divided
;
; 
; 001000 01001 01001 0000 0000 0000 0001
; 001000 01010 01010 0000 0000 0000 0010
; 001000 01011 01011 0000 0000 0000 0011
; 001000 01100 01100 0000 0000 0000 0100
; 001000 01101 01101 0000 0000 0001 0000
; 001000 01110 01110 0000 0000 0010 0000
;
; 111000 10010 00000 0000 0000 0001 0000        ; iut = strv
;
; 001001 01001 01001 0000 0000 0000 0001
; 001001 01010 01010 0000 0000 0000 0010
; 001001 01011 01011 0000 0000 0000 0011
; 001001 01100 01100 0000 0000 0000 0100
; 001010 01101 01101 0000 0000 0000 0001
; 001010 01110 01110 0000 0000 0000 0001
;
; 111001 10000 00000 0000 0000 0000 0000;
;
; 111001 10001 01110 0000 0000 0000 0000;
;



;
; Bitstream complete
;



;
; Bitstream divided
;
; 00100001 00101001 00000000 00000001
; 00100001 01001010 00000000 00000010
; 00100001 01101011 00000000 00000011
; 00100001 10001100 00000000 00000100
; 00100001 10101101 00000000 00010000
; 00100001 11001110 00000000 00100000
;
; 11100010 01000000 00000000 00010000        ; iut = strv
;
; 00100101 00101001 00000000 00000001
; 00100101 01001010 00000000 00000010
; 00100101 01101011 00000000 00000011
; 00100101 10001100 00000000 00000100
; 00101001 10101101 00000000 00000001
; 00101001 11001110 00000000 00000001
;
; 11100110 00000000 00000000 00000000;
;
; 11100110 00101110 00000000 00000000;



;
; Bitstream for instruction memory
;
00000001
00000000
00101001
00100001   

00000010
00000000
01001010
00100001   

00000011
00000000
01101011
00100001   

00000100
00000000
10001100
00100001   

00010000
00000000
10101101
00100001   

00100000
00000000
11001110
00100001   




00010000        ; iut = strv
00000000
01000000
11100010           




00000001
00000000
00101001
00100101   

00000010
00000000
01001010
00100101   

00000011
00000000
01101011
00100101   

00000100
00000000
10001100
00100101   

00000001
00000000
10101101
00101001   

00000001
00000000
11001110
00101001   




00000000        ; ldrv
00000000
00000000
11100110


00000000        ; ldrv
00000000
00101110
11100110





;
; Bitstream for .txt
;
00000001
00000000
00101001
00100001
00000010
00000000
01001010
00100001
00000011
00000000
01101011
00100001
00000100
00000000
10001100
00100001
00010000
00000000
10101101
00100001
00100000
00000000
11001110
00100001

00010000        ; iut = strv
00000000
01000000
11100010

00000001
00000000
00101001
00100101
00000010
00000000
01001010
00100101
00000011
00000000
01101011
00100101
00000100
00000000
10001100
00100101
00000001
00000000
10101101
00101001
00000001
00000000
11001110
00101001

00000000        ; ldrv
00000000
00000000
11100110

00000000        ; ldrv
00000000
00101110
11100110
